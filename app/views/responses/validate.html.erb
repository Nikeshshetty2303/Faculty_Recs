<%= render partial: 'partials/navbar', locals: { user: @user, locale: true } %>
<%=stylesheet_link_tag 'validate'%>

<div class="container mt-4">
  <%= link_to "Go Back", :back, class: "btn btn-light mb-3" %>

  <div class="credit-container">
    <div class="table-responsive">
      <table class="table table-bordered table credit-table">
        <thead class="thead-dark">
          <tr>
            <th scope="col">Question</th>
            <th scope="col">Response</th>
            <th scope="col">Credit</th>
            <th scope="col">Verified Count</th>
            <th scope="col">Verified Credit</th>
          </tr>
        </thead>
        <tbody>
          <% CreditSection.all.each do |credit_section| %>
            <tr>
              <td colspan="5" class="bg-light">
                <div class="d-flex justify-content-between align-items-center">
                  <span><strong><%= credit_section.title %></strong></span>
                  <span class="section-credit badge" data-section-id="<%= credit_section.id %>">0</span>
                </div>
                <% first_question = credit_section.credit_questions.first %>
                <% first_answer = CreditAnswer.where(response_id: @responses.id, credit_section_id: credit_section.id, credit_question_id: first_question.id).last if first_question %>
                <% if first_answer&.file_upload&.present? %>
                  <div class="mt-2">
                    <%= link_to "View Upload", view_pdf_response_path(ansid: first_answer.id, id: @responses.id), class: "btn btn-sm btn-outline-primary" %>
                  </div>
                <% end %>
              </td>
            </tr>
            <% credit_section.credit_questions.each do |credit_question| %>
              <% credit_answer = CreditAnswer.where(response_id: @responses.id, credit_section_id: credit_section.id, credit_question_id: credit_question.id).last %>
              <% if credit_answer %>
                <tr>
                  <td><%= credit_question.title %></td>
                  <td><%= credit_answer.answer %></td>
                  <td><%= credit_answer.credit %></td>
                  <td>
                    <input type="number" class="form-control verified-count" data-answer-id="<%= credit_answer.id %>" value="<%= credit_answer.verified_count %>">
                  </td>
                  <td>
                    <input type="number" class="form-control verified-credit" data-answer-id="<%= credit_answer.id %>" value="<%= credit_answer.verified_credit %>" readonly>
                  </td>
                </tr>
              <% end %>
            <% end %>
          <% end %>
        </tbody>
      </table>
    </div>
  </div>

  <div class="mt-3">
    <strong>Total Validated Credit Score: </strong>
    <span id="totalValidatedCredit">0</span>
  </div>

  <button id="updateAllBtn" class="btn btn-primary mt-3">Update All</button>

  <!-- The Remarks and Eligibility Section -->


<div class="row mt-4">
  <!-- Eligibility Form -->
  <div class="col-md-8">
    <h4 class="mb-3">Eligibility Assessment</h4>
    <%= form_with(model: @responses, url: update_eligibility_response_path(res_id: @responses.id), method: :post) do |f| %>
      <div class="row">
        <div class="col-md-6 mb-3">
          <%= f.label :eligibility, "Eligibility", class: "form-label" %>
          <% if @responses.eligibility == true %>
            <em class="text-success">(The Applicant is Eligible)</em>
          <% elsif @responses.eligibility == false %>
            <em class="text-danger">(The Applicant is Not Eligible)</em>
          <% end %>
          <%= f.select :eligibility, options_for_select([['Select', ''], ['Yes', true], ['No', false]], @responses.eligibility), {}, class: "form-select" %>
        </div>
        <div class="col-md-6 mb-3">
          <%= f.label :academic_experience, "Academic Experience", class: "form-label" %>
          <%= f.select :academic_experience, options_for_select([['Select', ''], ['Satisfactory', true], ['Not Satisfactory', false]], @responses.academic_experience), {}, class: "form-select" %>
        </div>
      </div>
      <div class="row">
        <div class="col-md-6 mb-3">
          <%= f.label :professional_experience, "Professional Experience", class: "form-label" %>
          <%= f.select :professional_experience, options_for_select([['Select', ''], ['Satisfactory', true], ['Not Satisfactory', false]], @responses.professional_experience), {}, class: "form-select" %>
        </div>
        <div class="col-md-6 mb-3">
          <%= f.label :credit_requirements, "Credit Requirements", class: "form-label" %>
          <%= f.select :credit_requirements, options_for_select([['Select', ''], ['Satisfactory', true], ['Not Satisfactory', false]], @responses.credit_requirements), {}, class: "form-select" %>
        </div>
      </div>
      <div class="text-center mt-3">
        <%= f.submit "Update Eligibility", class: "btn btn-outline-primary" %>
      </div>
    <% end %>
  </div>

  <!-- Remarks Form -->
  <div class="col-md-4">
    <h4 class="mb-3">Remarks</h4>
    <%= form_with(model: @responses, url: add_remark_response_path(res_id: @responses.id), method: :post) do |f| %>
      <div class="form-group">
        <%= f.label :remark, "Add Remarks", class: "form-label" %>
        <%= f.text_area :remark, class: "form-control", rows: 5 %>
        <div class="text-center mt-3">
          <%= f.submit "Add Remarks", class: "btn btn-outline-primary" %>
        </div>
      </div>
    <% end %>
  </div>
</div>
</div>
<script>
document.addEventListener('DOMContentLoaded', function () {
  var creditAnswers = <%= raw CreditAnswer.where(response_id: @responses&.id).includes(:credit_question, :credit_section).to_json(
    only: [:id, :credit_question_id, :credit_section_id],
    include: {
      credit_question: { only: [:max_credit, :obt_credit] },
      credit_section: { only: [:id, :max_credit] }
    }
  ) %>;
  var verifiedCountInputs = document.querySelectorAll('.verified-count');
  var verifiedCreditInputs = document.querySelectorAll('.verified-credit');
  var updateAllBtn = document.getElementById('updateAllBtn');
  var totalValidatedCreditSpan = document.getElementById('totalValidatedCredit');
  var sectionCreditSpans = document.querySelectorAll('.section-credit');

  function updateCredit(answerId, newCount) {
    var answer = creditAnswers.find(a => a.id === answerId);
    if (!answer || !answer.credit_question) return 0;

    var obtCredit = answer.credit_question.obt_credit || 0;
    var maxCredit = answer.credit_question.max_credit;

    var calculatedCredit = newCount * obtCredit;

    if (maxCredit !== null && maxCredit !== undefined) {
      return Math.min(calculatedCredit, maxCredit);
    } else {
      return calculatedCredit;
    }
  }

  function calculateSectionTotal(sectionId) {
    var sectionAnswers = creditAnswers.filter(a => a.credit_section_id === sectionId);
    var sectionTotal = sectionAnswers.reduce((total, answer) => {
      var creditInput = document.querySelector(`.verified-credit[data-answer-id="${answer.id}"]`);
      return total + (parseFloat(creditInput.value) || 0);
    }, 0);

    var sectionMaxCredit = sectionAnswers[0]?.credit_section?.max_credit;
    if (sectionMaxCredit !== null && sectionMaxCredit !== undefined) {
      return Math.min(sectionTotal, sectionMaxCredit);
    } else {
      return sectionTotal;
    }
  }

  function updateAllCredits() {
    var totalCredit = 0;
    var sectionTotals = {};

    verifiedCountInputs.forEach(input => {
      var answerId = parseInt(input.dataset.answerId);
      var newCount = parseFloat(input.value) || 0;
      var creditInput = document.querySelector(`.verified-credit[data-answer-id="${answerId}"]`);
      if (creditInput) {
        var newCredit = updateCredit(answerId, newCount);
        creditInput.value = newCredit.toFixed(2);
      }
    });

    // Calculate section totals and overall total
    var uniqueSectionIds = [...new Set(creditAnswers.map(a => a.credit_section_id))];
    uniqueSectionIds.forEach(sectionId => {
      var sectionTotal = calculateSectionTotal(sectionId);
      sectionTotals[sectionId] = sectionTotal;
      totalCredit += sectionTotal;

      // Update section credit display
      var sectionCreditSpan = document.querySelector(`.section-credit[data-section-id="${sectionId}"]`);
      if (sectionCreditSpan) {
        sectionCreditSpan.textContent = sectionTotal.toFixed(2);
      }
    });

    totalValidatedCreditSpan.textContent = totalCredit.toFixed(2);
  }

  verifiedCountInputs.forEach(input => {
    input.addEventListener('input', function() {
      var answerId = parseInt(this.dataset.answerId);
      var newCount = parseFloat(this.value) || 0;
      var creditInput = document.querySelector(`.verified-credit[data-answer-id="${answerId}"]`);
      if (creditInput) {
        creditInput.value = updateCredit(answerId, newCount).toFixed(2);
      }
      updateAllCredits();
    });
  });

  updateAllBtn.addEventListener('click', function() {
    var updateData = Array.from(verifiedCountInputs).map(input => ({
      id: parseInt(input.dataset.answerId),
      verified_count: parseFloat(input.value) || 0,
      verified_credit: parseFloat(document.querySelector(`.verified-credit[data-answer-id="${input.dataset.answerId}"]`).value) || 0
    }));

    var totalValidatedCredit = parseFloat(totalValidatedCreditSpan.textContent);

    fetch('/update_credit_answers', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
      },
      body: JSON.stringify({
        credit_answers: updateData,
        response_id: <%= @responses.id %>,
        validated_credit_score: totalValidatedCredit
      })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        alert('All credit answers updated successfully!');
      } else {
        alert('Error updating credit answers. Please try again.');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('An error occurred. Please try again.');
    });
  });

  // Initial calculation
  updateAllCredits();
});
</script>