<%= stylesheet_link_tag "credits" %>
<%= render 'partials/navbar' %>

<div class="container-fluid">
  <h1 class="font-jost text-center fw-bold">Credit Calculation</h1>

  <div id="credits_container" class="font-jost my-3 mb-5">
    <div id="total_sum" class="mt-3 font-jost fw-bold">
      <div class="mb-2">Credit Score : <span class="badge text-bg" id="total_value">0</span> credits</div>
    </div>
    <div>
      <%= form_for :answers, url: credit_answers_path do |form| %>
        <% @section.each do |section| %>
          <div class="my-3" style="background-color:#cfe2ff; border-radius:8px; padding:1em">
            <div class="section-title d-flex justify-content-between align-items-center">
              <span><%= section.title %></span>
              <span>Section Credit: <span id="section_credit_<%= section.id %>">0</span>
                <% if section.max_credit.present? && section.max_credit > 0 %>
                  / <%= section.max_credit %>
                <% end %>
              </span>
            </div>
            <div class="mb-1">
              <% first_question = true %>
              <% @questions.where(credit_section_id: section.id).each do |question| %>
                <% if question.isheader == true %>
                  <label class="question-title"> <%= question.title %> </label>
                  <div style="display:flex;">
                    <% @questions.where(header_id: question.id).each do |sub_question| %>
                      <div style="display:flex;">
                        <%= form.fields_for "answers[]", CreditAnswer.new , index: sub_question.id do |answer_fields| %>
                          <%= answer_fields.hidden_field :credit_question_id, class: "question_id", value: sub_question.id %>
                          <%= answer_fields.hidden_field :credit_section_id, class: "section_id", value: section.id %>
                          <div class="my-3 mx-2">
                            <%= answer_fields.label :answer, sub_question.title, class: "form-label" %>
                            <div class='input-group mb-1'>
                              <%= answer_fields.number_field :answer, class: "form-control numeric-input", data: {questionId: sub_question.id, sectionId: section.id, obtCredit: sub_question.obt_credit, maxCredit: sub_question.max_credit } %>
                              <span id="credit_value_<%= sub_question.id %>" class="input-group-text">0</span>
                              <% if sub_question.max_credit.present? && sub_question.max_credit > 0 %>
                                <span class="input-group-text">/ <%= sub_question.max_credit %></span>
                              <% end %>
                            </div>
                          </div>
                        <% end %>
                      </div>
                    <% end %>
                  </div>
                <% elsif question.header_id == nil %>
                  <div class="mb-3">
                    <%= form.fields_for "answers[]", CreditAnswer.new, index: question.id do |answer_fields| %>
                      <% if first_question %>
                        <%= answer_fields.file_field :file_upload, class: "form-control", accept: ".pdf" %>
                        <% first_question = false %>
                      <% end %>
                      <div class="my-4">
                        <%= answer_fields.label :answer, question.title, class: "form-label" %>
                        <div class="input-group mb-3">
                          <%= answer_fields.number_field :answer, class: "form-control numeric-input", data: {questionId: question.id, sectionId: section.id, obtCredit: question.obt_credit, maxCredit: question.max_credit } %>
                          <span class="input-group-text" id="credit_value_<%= question.id %>">0</span>

                        </div>
                      </div>
                      <%= answer_fields.hidden_field :credit_question_id, class: "question_id", value: question.id %>
                      <%= answer_fields.hidden_field :credit_section_id, class: "section_id", value: section.id %>
                    <% end %>
                  </div>
                <% end %>
              <% end %>
            </div>
          </div>
        <% end %>

        <%= form.hidden_field :entry, value: @form.id %>

        <div class="alert alert" role="alert">
          <div id="error-message" style="color: red;"></div>
        </div>
        <div style="display:flex; justify-content:flex-end">
          <%= form.submit "Create Answers", class: "btn btn-success", id: "submit-button" %>
        </div>
      <% end %>
      <%= @entry %>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const numericInputs = document.querySelectorAll('.numeric-input');
  const totalValue = document.getElementById('total_value');
  const submitButton = document.getElementById('submit-button');
  const errorMessage = document.getElementById('error-message');

  const sectionCredits = {};
  const sectionMaxCredits = {};

  <% @section.each do |section| %>
    sectionMaxCredits[<%= section.id %>] = <%= section.max_credit || 0 %>;
  <% end %>

  numericInputs.forEach(input => {
    input.addEventListener('input', updateTotal);
  });

  function updateTotal() {
    let total = 0;

    // Reset section credits
    Object.keys(sectionCredits).forEach(key => {
      sectionCredits[key] = 0;
    });

    numericInputs.forEach(input => {
      const value = parseFloat(input.value) || 0;
      const questionId = input.dataset.questionid;
      const sectionId = input.dataset.sectionid;
      const obtCredit = parseFloat(input.dataset.obtcredit) || 0;
      const maxCredit = parseFloat(input.dataset.maxcredit) || 0;

      let credit;
      if (maxCredit > 0) {
        credit = Math.min(maxCredit, obtCredit * value);
      } else {
        credit = obtCredit * value;
      }
      sectionCredits[sectionId] = (sectionCredits[sectionId] || 0) + credit;

      const creditValueElement = document.getElementById(`credit_value_${questionId}`);
      creditValueElement.textContent = credit.toFixed(2);
    });

    // Apply section caps and update total
    Object.keys(sectionCredits).forEach(sectionId => {
      const sectionCredit = sectionCredits[sectionId];
      const maxCredit = sectionMaxCredits[sectionId];
      const cappedCredit = maxCredit > 0 ? Math.min(sectionCredit, maxCredit) : sectionCredit;

      total += cappedCredit;

      const sectionCreditElement = document.getElementById(`section_credit_${sectionId}`);
      sectionCreditElement.textContent = cappedCredit.toFixed(2);
    });

    totalValue.innerText = total.toFixed(2);
  }
});
</script>