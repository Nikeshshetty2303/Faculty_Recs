<%= render partial: 'partials/navbar', locals: { user: @user, locale: true } %>
<%= stylesheet_link_tag 'allresponses' %>

<div class="container mt-3">
  <div class="row">
    <div class="col-md-12">
      <ul class="nav nav-tabs">
        <li class="nav-item">
          <%= link_to 'Multi Application User', developer_multiple_app_user_path(userid: @user.id), class: "nav-link" %>
        </li>
        <li class="nav-item">
          <%= link_to 'CSV Generator', developer_csv_generator_path(userid: @user.id), class: "nav-link" %>
        </li>
        <li class="nav-item">
          <%= link_to 'Credit Question Check', developer_credit_questions_check_path(userid: @user.id), class: "nav-link" %>
        </li>
        <li class="nav-item">
          <%= link_to 'Mailer Portal', developer_mailer_portal_path(userid: @user.id), class: "nav-link" %>
        </li>
        <li class="nav-item">
          <%= link_to 'Shortlist Mailer Status', developer_shortlist_mailer_status_path(userid: @user.id), class: "nav-link" %>
        </li>
        <li class="nav-item">
          <%= link_to 'Referee Mailer Status', developer_referee_mailer_status_path(userid: @user.id), class: "nav-link active" %>
        </li>
      </ul>
    </div>
  </div>
</div>

<div class="container mt-4">
  <div class="row mb-4">
    <div class="col-md-12 mb-3">
      <label for="searchBar" class="form-label">Search:</label>
      <input type="text" class="form-control" id="searchBar" placeholder="Search for content...">
    </div>
    <div class="col-md-4">
      <label for="departmentFilter" class="form-label">Filter by Department:</label>
      <select class="form-select" id="departmentFilter">
        <option value="">All Departments</option>
        <% Department.all.each do |department| %>
          <option value="<%= department.title %>"><%= department.title %></option>
        <% end %>
      </select>
    </div>
    <div class="col-md-4">
      <label for="statusFilter" class="form-label">Filter by Status:</label>
      <select class="form-select" id="statusFilter">
        <option value="">All Statuses</option>
        <option value="both_sent">Both Sent</option>
        <option value="ref1_sent">Referee 1 Sent</option>
        <option value="ref2_sent">Referee 2 Sent</option>
        <option value="both_failed">Both Failed</option>
        <option value="error">Error</option>
      </select>
    </div>
    <div class="col-md-4 d-flex align-items-end">
      <span id="departmentCount" class="badge bg-secondary">Number of Responses: <span id="rowCount">0</span></span>
    </div>
  </div>

  <div class="table-responsive">
    <table class="table table-bordered table-hover">
      <thead class="table-dark">
        <tr>
          <th scope="col">Application ID</th>
          <th scope="col">Name</th>
          <th scope="col">R1 Name</th>
          <th scope="col">R1 Email</th>
          <th scope="col">R1 Ph Number</th>
          <th scope="col">R1 Affiliation</th>
          <th scope="col">R2 Name</th>
          <th scope="col">R2 Email</th>
          <th scope="col">R2 Ph Number</th>
          <th scope="col">R2 Affiliation</th>
        </tr>
      </thead>
      <tbody>
        <% Response.where.not(referee_mail_status: nil).each do |response| %>
      <%profile_response = response.user.responses.find_by(profile_response: true)%>
            <tr class="response-row <%=
              case response.referee_mail_status
              when 'both_sent'
                'table-success'
              when 'ref1_sent', 'ref2_sent'
                'table-warning'
              when 'both_failed'
                'table-danger'
              when 'error'
                'table-secondary'
              else
                ''
              end
            %>" data-status="<%= response.referee_mail_status %>">
              <td class="application-id"><%= response.app_no %></td>
              <td class="cand-name"><%= profile_response.answers.joins(:question).find_by(questions: { title: "Name in Full" }).content %></td>
              <td class="referee-1-name"><%= profile_response.answers.joins(:question).find_by(questions: { id: 535 }).content %></td>
              <td class="referee-1-email"><%=  profile_response.answers.joins(:question).find_by(questions: { id: 536 }).content%></td>
              <td class="referee-1-ph-no"><%=  profile_response.answers.joins(:question).find_by(questions: { id: 537 }).content%></td>
              <td class="referee-1-aff"><%=  profile_response.answers.joins(:question).find_by(questions: { id: 538 }).content%></td>
              <td class="referee-2-name"><%= profile_response.answers.joins(:question).find_by(questions: { id: 540 }).content %></td>
              <td class="referee-2-email"><%=  profile_response.answers.joins(:question).find_by(questions: { id: 541 }).content%></td>
              <td class="referee-2-ph-no"><%=  profile_response.answers.joins(:question).find_by(questions: { id: 542 }).content%></td>
              <td class="referee-2-aff"><%=  profile_response.answers.joins(:question).find_by(questions: { id: 543 }).content%></td>
            </tr>
        <% end %>
      </tbody>
    </table>
  </div>

   <div class="mt-3">
    <button id="downloadCsv" class="btn btn-primary">Download CSV</button>
  </div>

</div>

<style>
  .table-success { background-color: #d4edda !important; }
  .table-warning { background-color: #fff3cd !important; }
  .table-danger { background-color: #f8d7da !important; }
  .table-secondary { background-color: #e2e3e5 !important; }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    let departmentFilter = document.getElementById('departmentFilter');
    let statusFilter = document.getElementById('statusFilter');
    let searchBar = document.getElementById('searchBar');
    let rowCountSpan = document.getElementById('rowCount');

    function updateRowVisibility() {
      let selectedDepartment = departmentFilter.value.toLowerCase();
      let selectedStatus = statusFilter.value;
      let searchTerm = searchBar.value.toLowerCase();
      let rows = document.querySelectorAll('.response-row');
      let count = 0;

      rows.forEach(function (row) {
        let applicationId = row.querySelector('.application-id').textContent.toLowerCase();
        let status = row.dataset.status;
        let rowContent = row.textContent.toLowerCase();

        let departmentMatch = selectedDepartment === '' || applicationId.includes(selectedDepartment);
        let statusMatch = selectedStatus === '' || status === selectedStatus;
        let searchMatch = searchTerm === '' || rowContent.includes(searchTerm);

        if (departmentMatch && statusMatch && searchMatch) {
          row.style.display = '';
          count++;
        } else {
          row.style.display = 'none';
        }
      });

      rowCountSpan.textContent = count;
    }

    departmentFilter.addEventListener('change', updateRowVisibility);
    statusFilter.addEventListener('change', updateRowVisibility);
    searchBar.addEventListener('input', updateRowVisibility);

    // Initial update on page load
    updateRowVisibility();
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    let departmentFilter = document.getElementById('departmentFilter');
    let statusFilter = document.getElementById('statusFilter');
    let searchBar = document.getElementById('searchBar');
    let rowCountSpan = document.getElementById('rowCount');
    let downloadCsvButton = document.getElementById('downloadCsv');

    function updateRowVisibility() {
      // ... (previous updateRowVisibility function remains unchanged) ...
    }

    departmentFilter.addEventListener('change', updateRowVisibility);
    statusFilter.addEventListener('change', updateRowVisibility);
    searchBar.addEventListener('input', updateRowVisibility);

    // Initial update on page load
    updateRowVisibility();

    // CSV download functionality
    downloadCsvButton.addEventListener('click', function() {
      let visibleRows = Array.from(document.querySelectorAll('.response-row')).filter(row => row.style.display !== 'none');
      let csvContent = "data:text/csv;charset=utf-8,";

      // Add header row
      let headers = Array.from(document.querySelectorAll('thead th')).map(th => th.textContent);
      csvContent += headers.join(",") + "\n";

      // Add visible row data
      visibleRows.forEach(function(row) {
        let rowData = Array.from(row.querySelectorAll('td')).map(td => {
          // Escape commas and double quotes in the content
          let content = td.textContent.replace(/"/g, '""');
          return `"${content}"`;
        });
        csvContent += rowData.join(",") + "\n";
      });

      // Create download link and trigger download
      let encodedUri = encodeURI(csvContent);
      let link = document.createElement("a");
      link.setAttribute("href", encodedUri);
      link.setAttribute("download", "referee_mailer_status.csv");
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    });
  });
</script>