<%= render partial: 'partials/navbar', locals: { user: @user, locale: true } %>

<style>
  .btn-group .btn.active {
    background-color: #007bffd1;
    color: #fff;
  }

  .nav-tabs .nav-link.active {
    color: #fff;
    background-color: #007bff;
    border-color: #007bff;
  }

  .search-container {
    position: relative;
  }

  .search-container i {
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
  }

  .department-card {
    cursor: pointer;
  }

  .toggle-switch {
    display: inline-block;
    position: relative;
    width: 60px;
    height: 34px;
  }

  .toggle-switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }

  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;
    border-radius: 34px;
  }

  .slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
  }

  input:checked + .slider {
    background-color: #2196F3;
  }

  input:checked + .slider:before {
    transform: translateX(26px);
  }

    .loader {
    border: 5px solid #f3f3f3;
    border-top: 5px solid #3498db;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    animation: spin 1s linear infinite;
    margin: 20px auto;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
</style>

<!-- Include Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="container mt-3">
  <div class="row">
    <div class="col-md-12">
      <ul class="nav nav-tabs">
        <li class="nav-item">
          <%= link_to 'Users', admin_dashboard_all_users_path(userid: @user.id), class: "nav-link" %>
        </li>
        <li class="nav-item">
          <%= link_to 'Responses', admin_dashboard_all_responses_path(userid: @user.id), class: "nav-link" %>
        </li>
        <li class="nav-item">
          <%= link_to 'Statistics', admin_dashboard_statistics_path(userid: @user.id), class: "nav-link" %>
        </li>
        <li class="nav-item">
          <%= link_to 'Application Extracts', admin_dashboard_extract_portal_path(userid: @user.id), class: "nav-link" %>
        </li>
        <li class="nav-item">
          <%= link_to 'Applications Table', admin_dashboard_application_summary_table_path(userid: @user.id), class: "nav-link active" %>
        </li>
      </ul>
    </div>
  </div>
</div>


<div class="container mt-4">
  <div class="row mb-4">
    <div class="col-md-6 offset-md-3">
      <div class="search-container">
        <input type="text" class="form-control" id="searchBar" placeholder="Search for departments...">
        <i class="fas fa-search"></i>
      </div>
    </div>
  </div>
  <div class="row" id="departmentCards">
    <% Department.all.each do |department| %>
      <div class="col-md-4 mb-4">
        <div class="card h-100 department-card" data-department-id="<%= department.id %>">
          <div class="card-body">
            <%total_dept_app = Response.joins(form: :department)
                          .where(status: "Freezed")
                          .where(departments: { id: department.id })%>
            <h5 class="card-title"><%= department.title %></h5>
            <p class="card-text">Click to view details</p>
            <p class="card-text">Total Applications: <span class="total-applications"><%=total_dept_app.count%></span></p>
          </div>
        </div>
      </div>
    <% end %>
  </div>
</div>

<!-- Modal template -->
<div class="modal fade" id="departmentModal" tabindex="-1" aria-labelledby="departmentModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="departmentModalLabel">Department Details</h5>
        <div class="ms-auto">
          <label class="toggle-switch">
            <input type="checkbox" id="viewToggle">
            <span class="slider"></span>
          </label>
          <span id="viewLabel">Table View</span>
        </div>
        <button type="button" class="btn-close ms-2" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div id="loader" class="loader" style="display: none;"></div>
        <div id="modalContent" style="display: none;">
          <div id="tableView"></div>
          <div id="graphView" style="display: none;">
            <canvas id="departmentChart"></canvas>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
  const searchBar = document.getElementById('searchBar');
  const departmentCards = document.querySelectorAll('.department-card');
  const modal = new bootstrap.Modal(document.getElementById('departmentModal'));
  let currentDepartmentId = null;
  let chart = null;

  // Search functionality
  searchBar.addEventListener('input', function() {
    let searchTerm = this.value.toLowerCase();
    departmentCards.forEach(function(card) {
      let departmentName = card.querySelector('.card-title').textContent.toLowerCase();
      card.closest('.col-md-4').style.display = departmentName.includes(searchTerm) ? '' : 'none';
    });
  });

  // Load department data on card click
  departmentCards.forEach(card => {
    card.addEventListener('click', function() {
      currentDepartmentId = this.dataset.departmentId;
      loadDepartmentData(currentDepartmentId);
    });
  });

  function loadDepartmentData(departmentId) {
    showLoader();
    fetch(`/admin_dashboard/department_data/${departmentId}`)
      .then(response => response.json())
      .then(data => {
        updateModalContent(data);
        hideLoader();
        modal.show();
      })
      .catch(error => {
        console.error('Error:', error);
        hideLoader();
      });
  }

  function showLoader() {
    document.getElementById('loader').style.display = 'block';
    document.getElementById('modalContent').style.display = 'none';
  }

  function hideLoader() {
    document.getElementById('loader').style.display = 'none';
    document.getElementById('modalContent').style.display = 'block';
  }


  function updateModalContent(data) {
    document.getElementById('departmentModalLabel').textContent = `${data.department_title} Department Details`;
    updateTableView(data);
    updateTotalApplications(data.department_id, data.total_applications);
    resetToggle();
  }

  function updateTableView(data) {
    const tableView = document.getElementById('tableView');
    tableView.innerHTML = `
      <div class="table-responsive">
        <table class="table table-hover">
          <thead>
            <tr>
              <th scope="col">Category</th>
              <th scope="col">GEN</th>
              <th scope="col">SC</th>
              <th scope="col">ST</th>
              <th scope="col">OBC</th>
              <th scope="col">Not Entered</th>
              <th scope="col">Total</th>
            </tr>
          </thead>
          <tbody>
            ${data.forms.map(form => `
              <tr>
                <td>${form.role}</td>
                <td>${form.gen}</td>
                <td>${form.sc}</td>
                <td>${form.st}</td>
                <td>${form.obc}</td>
                <td>${form.not_entered}</td>
                <td>${form.total}</td>
              </tr>
            `).join('')}
            <tr class="font-weight-bold">
              <td>Total</td>
              <td>${data.total_gen}</td>
              <td>${data.total_sc}</td>
              <td>${data.total_st}</td>
              <td>${data.total_obc}</td>
              <td>${data.total_not_entered}</td>
              <td>${data.total_applications}</td>
            </tr>
          </tbody>
        </table>
      </div>
    `;
  }

  function updateTotalApplications(departmentId, total) {
    const card = document.querySelector(`.department-card[data-department-id="${departmentId}"]`);
    if (card) {
      card.querySelector('.total-applications').textContent = total;
    }
  }

  function resetToggle() {
    const toggle = document.getElementById('viewToggle');
    const label = document.getElementById('viewLabel');
    const tableView = document.getElementById('tableView');
    const graphView = document.getElementById('graphView');

    toggle.checked = false;
    label.textContent = 'Table View';
    tableView.style.display = 'block';
    graphView.style.display = 'none';
  }

  // Toggle switch functionality
  document.getElementById('viewToggle').addEventListener('change', function() {
    const label = document.getElementById('viewLabel');
    const tableView = document.getElementById('tableView');
    const graphView = document.getElementById('graphView');

    if (this.checked) {
      label.textContent = 'Graph View';
      tableView.style.display = 'none';
      graphView.style.display = 'block';
      createOrUpdateChart();
    } else {
      label.textContent = 'Table View';
      tableView.style.display = 'block';
      graphView.style.display = 'none';
    }
  });

  function createOrUpdateChart() {
    const ctx = document.getElementById('departmentChart').getContext('2d');
    const data = [
      parseInt(document.querySelector('tr.font-weight-bold td:nth-child(2)').textContent),
      parseInt(document.querySelector('tr.font-weight-bold td:nth-child(3)').textContent),
      parseInt(document.querySelector('tr.font-weight-bold td:nth-child(4)').textContent),
      parseInt(document.querySelector('tr.font-weight-bold td:nth-child(5)').textContent),
      parseInt(document.querySelector('tr.font-weight-bold td:nth-child(6)').textContent)
    ];

    if (chart) {
      chart.data.datasets[0].data = data;
      chart.update();
    } else {
      chart = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: ['GEN', 'SC', 'ST', 'OBC', 'Not Entered'],
          datasets: [{
            label: 'Applications by Category',
            data: data,
            backgroundColor: [
              'rgba(255, 99, 132, 0.5)',
              'rgba(54, 162, 235, 0.5)',
              'rgba(255, 206, 86, 0.5)',
              'rgba(75, 192, 192, 0.5)',
              'rgba(153, 102, 255, 0.5)'
            ],
            borderColor: [
              'rgba(255, 99, 132, 1)',
              'rgba(54, 162, 235, 1)',
              'rgba(255, 206, 86, 1)',
              'rgba(75, 192, 192, 1)',
              'rgba(153, 102, 255, 1)'
            ],
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
    }
  }
});
</script>